vs code에서 파일을 생성 시에는 반드시 파일명 뒤에 .확장자를 포함해서 작성해야 한다.

Alt+Z 자동 줄바꿈 단축키

Html(Hyper Text Markup Language) : 웹 페이지에서 다른 페이지로 이동할 수 있도록 웹 브라우저에게 명령을 내리는 구조적인 문서를 만드는 언어

<Tag> <태그> : 의미있는 정보를 가진 메타데이터로 부여된 키워드 또는 분류이다.

웹문서가 어떤 언어로 작성되었는가? 선언하는 HTML5 버전 선언문 <!doctype html>

웹페이지를 표시하기 위한 웹 브라우저 구조 태그 <Tag> : <html> <head> <meta> <title> <body>

열림태그와 닫힘태그 <Tag></Tag> : <html> <head> <title> ... </title> </head> <body> ... </body> </html>

<태그 속성 = "값">

속성 : 태그마다 여러 속성을 부여해야 할 경우
미리 정의된 속성
특별한 기능을 하는 속성

값 : 속성이 가지는 값
큰 따옴표("") 작은 따옴표('')
속성이 가진 고유 값
개발자가 기본 규칙 내에서 지정할 수 있는 사용자 지정 값 설정

<html>의 속성과 값 : <html lang="ko">
컴퓨터의 화면 낭독 소프트웨어 "스크린 리더"

<meta>의 속성과 값 : <meta charset="utf-8">
<meta>의 속성과 값 : <meta name="description" content=""> <meta name="keywords" content="">

HTML 주석 태그 : 웹 브라우저에 표시되지 않으며 개발자가 코드의 이해를 돕기 위한 설명, 테스트 디버깅을 위한 코드 명령 등을 작성할 때 사용하는 구문이다.

HTML TREE : 가족관계는 크게 '부모', '자식', '자손', '형제' 개념으로 나뉩니다.


-----GIT-----
GIT : 소스코드 변경이력, 변경내용 저장, 여러 명 동시 협업을 하는 소프트웨어 버전 관리 시스템

GIT 프로그램의 종류
1. 깃 허브 데스크톱 : 간단한 GUI 구성, 기본기능 위주 고급 기능 제공 어려움
2. 토터스깃 : 윈도우 전용 프로그램, 탐색기에 추가되는 프로그램
3. 소스트리 : 깃으 ㅣ기본 ~ 고급까지 사용가능, 사용법이 복잡함.
4. 커맨드 라인 인터페이스 : 터미널 창에 리눅스 멍령어를 입력하는 방식. 활용도 높음.

-----리눅스 명령어 기초연습-----
터미널 Ctrl + J -> Git Bash
1. ~ 최상위 디렉터리 위치
2. pwd 현재 경로 디렉터리 표시
3. ls 현재 디렉터리 폴더와 파일 표시
4. mkdir 생성 디렉터리명
    현재 경로 위치에 디렉터리 생성
5. rm -r 삭제 디렉터리명
    현재 경로 위치에 디렉터리 제거(내용까지 모두)
6. cd 디렉터리명
    하위 디렉터리로 이동
7. cd ..
    상위 디렉터리는 이름을 인식할 수 없으므로
    한 단계 위(..)라는 뜻으로 ..을 사용해서 나간다.
8. vim 생성 파일명.확장자
    원하는 파일을 확장자를 포함해서 ex)test.txt 생성 후
    i를 눌러서 끼워넣기 버전으로 변경하고
    원하는 내용 입력 후 ESC 키 누르고 :wq 저장하고 종료
9. cat 확인 파일명.확장자
    내용 확인하고 싶은 파일명 확장자 포함 ex)test.txt 작성 후
    확인하면 내용을 미리 볼 수 있다.
10. git init 현재 디렉터리를 GIT 저장소로 지정
11. ls -a 현재 디렉터리 숨겨진 폴더와 파일 포함 전부 표시
12. git branch -M main 마스터의 이름을 메인으로 변경
13. git status 현재 상태 표시
14. git log 작업 기록 로그를 표시
15. git add . 모든 파일을 추가

* TIP
터미널 입력 중 갑자기 입력이 안되거나 입력화면이 보이지 않는 경우
Ctrl + C 또는 q를 누르면 정상으로 돌아간다.

GIT은 어떻게 파일 관리를 하는 걸까?
작업트리(working tree) or 작업 디렉터리 작업 저장 폴더
스테이지(stage) or 스테이지 영역(staging area)
    버전으로 만든 파일이 대기하는 장소
    작업트리에서 10개의 파일 수정 후 4개의 파일을 버전으로 만든다면 4개 파일만 스테이지에서 저장소로 저장될 때 까지 대기하게 됩니다.
저장소(.git) or 리포지토리(Repositories)
    스테이지에 있던 파일을 버전으로 만들어 저장하는 장소

작업트리 -> 스테이지 -> 저장소
작업트리(hello.txt) -> 스테이지 삽입 -> 작업트리(hello.txt) -> 스테이지 삽입 -> 저장소 커밋(버전 생성)
Git add - Git commit - Git push - Git pull -Git Reset

GitHub은 무엇인가?
Git에서 저장된 코드를 공유하고 협업하는 웹호스팅 서비스
깃 허브 1일 1커밋하기 '깃허브 정원사(gardener)가 되자!

